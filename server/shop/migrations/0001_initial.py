# Generated by Django 5.2.6 on 2025-09-19 08:28

import django.core.validators
import django.db.models.deletion
import shop.models.product_content.product_image_model
import shop.models.product_filters.brand_model
import shop.models.product_filters.country_model
import shop.models.user_content.review_photo_model
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название категории товара', max_length=100, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория товаров',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AttributeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название категории аттрибутов товара', max_length=100, unique=True, verbose_name='Название категории аттрибутов')),
            ],
            options={
                'verbose_name': 'Категория аттрибутов',
                'verbose_name_plural': 'Категории аттрибутов',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_attrib_name_e273ca_idx')],
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название бренда производителя', max_length=100, unique=True, verbose_name='Название бренда')),
                ('logo', models.ImageField(help_text='Загрузите логотип бренда производителя', upload_to=shop.models.product_filters.brand_model.brand_logo_path, verbose_name='Логотип бренда')),
            ],
            options={
                'verbose_name': 'Бренд производителя',
                'verbose_name_plural': 'Бренды производителей',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_brand_name_c466ec_idx')],
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время создания корзины')),
                ('user', models.ForeignKey(help_text='Выберите пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название страны производства', max_length=100, unique=True, verbose_name='Название страны')),
                ('flag', models.ImageField(help_text='Загрузите флаг страны производства', upload_to=shop.models.product_filters.country_model.manufacturer_flag_path, verbose_name='Флаг страны')),
            ],
            options={
                'verbose_name': 'Страна производства',
                'verbose_name_plural': 'Страны производства',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_countr_name_ad5343_idx')],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Введите адрес для доставки заказа', max_length=500, verbose_name='Адрес для доставки заказа')),
                ('phone', models.CharField(help_text='Введите номер телефона заказчика', max_length=20, validators=[django.core.validators.RegexValidator(message='Введите корректный номер телефона', regex='^\\+?\\d{7,15}$')], verbose_name='Номер телефона заказчика')),
                ('delivery_date', models.DateField(help_text='Выберите дату доставки заказа', verbose_name='Дата доставки заказа')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время создания заказа')),
                ('status', models.CharField(choices=[('pending', 'В обработке'), ('confirmed', 'Подтвержден'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('cancelled', 'Отменен')], default='pending', help_text='Текущий статус заказа', max_length=20, verbose_name='Статус заказа')),
                ('user', models.ForeignKey(help_text='Выберите пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название товара', max_length=255, verbose_name='Название товара')),
                ('description', models.TextField(help_text='Введите описание товара', verbose_name='Описание товара')),
                ('brand', models.ForeignKey(blank=True, help_text='Выберите бренд товара', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.brand', verbose_name='Бренд товара')),
                ('country', models.ForeignKey(help_text='Выберите страну производства товара', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.country', verbose_name='Страна производства товара')),
                ('product_category', models.ForeignKey(help_text='Выберите категорию товара', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.productcategory', verbose_name='Категория товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время добавления в избранное')),
                ('user', models.ForeignKey(help_text='Выберите пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_products', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('product', models.ForeignKey(help_text='Выберите товар', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_products', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Избранный товар',
                'verbose_name_plural': 'Избранные товары',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название раздела товара', max_length=100, unique=True, verbose_name='Название раздела')),
            ],
            options={
                'verbose_name': 'Раздел товаров',
                'verbose_name_plural': 'Разделы товаров',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='shop_produc_name_620cce_idx')],
            },
        ),
        migrations.AddField(
            model_name='productcategory',
            name='product_chapter',
            field=models.ForeignKey(help_text='Выберите раздел товара', on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='shop.productchapter', verbose_name='Раздел товара'),
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название вариации товара', max_length=100, verbose_name='Название вариации товара')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите цену за вариацию товара', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена за вариацию')),
                ('product', models.ForeignKey(help_text='Выберите товар', on_delete=django.db.models.deletion.CASCADE, related_name='product_variants', to='shop.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Вариация товара',
                'verbose_name_plural': 'Вариации товаров',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductInOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите цену за товар на момент покупки', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена за товар на момент покупки')),
                ('quantity', models.PositiveIntegerField(help_text='Введите количество товара', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество товаров')),
                ('order', models.ForeignKey(help_text='Выберите заказ пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='products_in_orders', to='shop.order', verbose_name='Заказ пользователя')),
                ('product_variant', models.ForeignKey(help_text='Выберите вариацию товара', on_delete=django.db.models.deletion.CASCADE, related_name='products_in_orders', to='shop.productvariant', verbose_name='Вариация товара')),
            ],
            options={
                'verbose_name': 'Товар в заказе',
                'verbose_name_plural': 'Товары в заказе',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductInCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Введите количество товара', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество товаров')),
                ('cart', models.ForeignKey(help_text='Выберите корзину пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='products_in_carts', to='shop.cart', verbose_name='Корзина пользователя')),
                ('product_variant', models.ForeignKey(help_text='Выберите вариацию товара', on_delete=django.db.models.deletion.CASCADE, related_name='products_in_carts', to='shop.productvariant', verbose_name='Вариация товара')),
            ],
            options={
                'verbose_name': 'Товар в корзине',
                'verbose_name_plural': 'Товары в корзине',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Загрузите изображение товара', upload_to=shop.models.product_content.product_image_model.product_image_path, verbose_name='Изображение товара')),
                ('product_variant', models.ForeignKey(help_text='Выберите вариацию товара', on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='shop.productvariant', verbose_name='Вариация товара')),
            ],
            options={
                'verbose_name': 'Изображение товара',
                'verbose_name_plural': 'Изображения товара',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название аттрибута товара', max_length=100, verbose_name='Название аттрибута')),
                ('value', models.CharField(help_text='Введите значение аттрибута товара', max_length=100, verbose_name='Значение аттрибута')),
                ('attribute_category', models.ForeignKey(help_text='Выберите категорию аттрибута товара', on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='shop.attributecategory', verbose_name='Категория аттрибута товара')),
                ('product_variant', models.ForeignKey(help_text='Выберите вариацию товара', on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='shop.productvariant', verbose_name='Вариация товара')),
            ],
            options={
                'verbose_name': 'Аттрибут товара',
                'verbose_name_plural': 'Аттрибуты товара',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите заголовок отзыва', max_length=255, verbose_name='Заголовок отзыва')),
                ('rating', models.PositiveSmallIntegerField(help_text='Укажите рейтинг товара (от 1 до 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг товара')),
                ('comment', models.TextField(help_text='Введите текст отзыва', verbose_name='Текст отзыва')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время отзыва')),
                ('product', models.ForeignKey(help_text='Выберите товар', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product', verbose_name='Товар')),
                ('user', models.ForeignKey(help_text='Выберите пользователя', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ReviewPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(help_text='Загрузите фотографию к отзыву', upload_to=shop.models.user_content.review_photo_model.review_photo_path, verbose_name='Фотография к отзыву')),
                ('review', models.ForeignKey(help_text='Выберите отзыв к товару', on_delete=django.db.models.deletion.CASCADE, related_name='review_photos', to='shop.review', verbose_name='Отзыв к товару')),
            ],
            options={
                'verbose_name': 'Фотография для отзыва',
                'verbose_name_plural': 'Фотографии для отзыва',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название ключевого слова', max_length=100, unique=True, verbose_name='Ключевое слово')),
                ('product', models.ManyToManyField(blank=True, help_text='Выберите товары, связанные с этим тегом', related_name='tags', to='shop.product', verbose_name='Товары')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['user'], name='shop_cart_user_id_696d22_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user'], name='shop_order_user_id_e5ca77_idx'),
        ),
        migrations.AddConstraint(
            model_name='favoriteproduct',
            constraint=models.UniqueConstraint(fields=('product', 'user'), name='user_favorite_products'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('product_category', 'title'), name='unique_products_per_product_category'),
        ),
        migrations.AddConstraint(
            model_name='productcategory',
            constraint=models.UniqueConstraint(fields=('product_chapter', 'name'), name='unique_category_per_product_chapter'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('product', 'name'), name='unique_variants_per_product'),
        ),
        migrations.AddConstraint(
            model_name='productinorder',
            constraint=models.UniqueConstraint(fields=('product_variant', 'order'), name='unique_product_variant_per_order'),
        ),
        migrations.AddConstraint(
            model_name='productincart',
            constraint=models.UniqueConstraint(fields=('product_variant', 'cart'), name='unique_product_variant_per_cart'),
        ),
        migrations.AddConstraint(
            model_name='productimage',
            constraint=models.UniqueConstraint(fields=('product_variant', 'image'), name='unique_images_per_product_variant'),
        ),
        migrations.AddConstraint(
            model_name='attribute',
            constraint=models.UniqueConstraint(fields=('product_variant', 'name'), name='unique_attributes_per_product_variant'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('product', 'user'), name='unique_user_per_product'),
        ),
        migrations.AddConstraint(
            model_name='reviewphoto',
            constraint=models.UniqueConstraint(fields=('review', 'photo'), name='unique_photo_per_review'),
        ),
    ]
